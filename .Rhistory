(kills+assists)/deaths),
kp_pct = (kills)/team_kills,
ks_pct = kills/team_kills, gld_pct = gold/team_gold) %>%
select(kills, deaths, assists, cs, gold, points, kda, kp_pct, ks_pct,
gld_pct, name) %>%
group_by(name) %>%
summarize(kills = mean(kills, na.rm = T),
deaths = mean(deaths, na.rm = T),
assists = mean(assists, na.rm = T),
kda = mean(kda, na.rm = T),
kp_pct = mean(kp_pct, na.rm = T),
ks_pct = mean(ks_pct, na.rm = T),
cs = mean(cs, na.rm = T),
gold = mean(gold, na.rm = T),
gld_pct = mean(gld_pct, na.rm = T),
points = mean(points, na.rm = T)) %>%
ungroup() %>%
select(gld_pct) %>%
quantile(0.98, type = 1, na.rm = T)
lol_data %>%
select(kills, deaths, assists, cs, gold, team_kills, team_gold,
points, name) %>%
mutate(kda = ifelse((kills+assists)/deaths == Inf, (kills+assists),
(kills+assists)/deaths),
kp_pct = (kills)/team_kills,
ks_pct = kills/team_kills, gld_pct = gold/team_gold) %>%
select(kills, deaths, assists, cs, gold, points, kda, kp_pct, ks_pct,
gld_pct, name) %>%
group_by(name) %>%
summarize(kills = mean(kills, na.rm = T),
deaths = mean(deaths, na.rm = T),
assists = mean(assists, na.rm = T),
kda = mean(kda, na.rm = T),
kp_pct = mean(kp_pct, na.rm = T),
ks_pct = mean(ks_pct, na.rm = T),
cs = mean(cs, na.rm = T),
gold = mean(gold, na.rm = T),
gld_pct = mean(gld_pct, na.rm = T),
points = mean(points, na.rm = T)) %>%
ungroup() %>%
select(points) %>%
quantile(0.98, type = 1, na.rm = T)
runApp('lol_stats/lol_app.R')
lol_data %>%
select(kills, deaths, assists, cs, gold, team_kills, team_gold,
points, name) %>%
mutate(kda = ifelse((kills+assists)/deaths == Inf, (kills+assists),
(kills+assists)/deaths),
kp_pct = (kills)/team_kills,
ks_pct = kills/team_kills, gld_pct = gold/team_gold) %>%
select(kills, deaths, assists, cs, gold, points, kda, kp_pct, ks_pct,
gld_pct, name) %>%
group_by(name) %>%
summarize(kills = mean(kills, na.rm = T),
deaths = mean(deaths, na.rm = T),
assists = mean(assists, na.rm = T),
kda = mean(kda, na.rm = T),
kp_pct = mean(kp_pct, na.rm = T),
ks_pct = mean(ks_pct, na.rm = T),
cs = mean(cs, na.rm = T),
gold = mean(gold, na.rm = T),
gld_pct = mean(gld_pct, na.rm = T),
points = mean(points, na.rm = T)) %>%
ungroup() %>%
select(ks_pct) %>%
quantile(0.98, type = 1, na.rm = T)
runApp('lol_stats/lol_app.R')
runApp('lol_stats/lol_app.R')
runApp('lol_stats/lol_app.R')
runApp('lol_stats/lol_app.R')
names(lol_data)
runApp('lol_stats/lol_app.R')
runApp('lol_stats/lol_app.R')
runApp('lol_stats/lol_app.R')
install.packages("gridExtra")
library(shiny); runApp('lol_stats/lol_app.R')
runApp('lol_stats/lol_app.R')
runApp('lol_stats/lol_app.R')
runApp('lol_stats/lol_app.R')
runApp('lol_stats/lol_app.R')
runApp('lol_stats/lol_app.R')
runApp('lol_stats/lol_app.R')
runApp('lol_stats/lol_app.R')
runApp('lol_stats/lol_app.R')
runApp('lol_stats/lol_app.R')
runApp('lol_stats/lol_app.R')
runApp('lol_stats/lol_app.R')
runApp('lol_stats/lol_app.R')
source("rcode/datainstate_cols.R")
source("rcode/dis_theme.R")
runApp('lol_stats/lol_app.R')
runApp('lol_stats/lol_app.R')
runApp('lol_stats/lol_app.R')
library(ggplot2)
theme_bw(base_size=11, base_family="Georgia")
theme_dis <- function () {
theme_bw(base_size=11, base_family="Georgia") %+replace%
theme(
panel.background  = element_blank(),
plot.background = element_rect(fill="gray96", colour=NA),
legend.background = element_rect(fill="transparent", colour=NA),
legend.key        = element_rect(fill="transparent", colour=NA),
base_line_size = base_size / 150,
base_rect_size = base_size / 150,
plot.title = element_text(
color = rgb(251, 146, 28, maxColorValue = 255),
face = "bold",
hjust = 0),
axis.title = element_text(
color = rgb(51, 51, 51, maxColorValue = 255),
size = rel(0.75)),
axis.text = element_text(
color = rgb(51, 51, 51, maxColorValue = 255),
size = rel(0.5)),
panel.grid.major = element_line(
rgb(51, 51, 51, maxColorValue = 255),
linetype = "dotted"),
panel.grid.minor = element_line(
rgb(51, 51, 51, maxColorValue = 255),
linetype = "dotted",
size = rel(4))
)
}
theme_dis()
library(ggplot2)
theme_dis <- function (base_size=11, base_family="Georgia") {
theme_bw() %+replace%
theme(
panel.background  = element_blank(),
plot.background = element_rect(fill="gray96", colour=NA),
legend.background = element_rect(fill="transparent", colour=NA),
legend.key        = element_rect(fill="transparent", colour=NA),
base_line_size = base_size / 150,
base_rect_size = base_size / 150,
plot.title = element_text(
color = rgb(251, 146, 28, maxColorValue = 255),
face = "bold",
hjust = 0),
axis.title = element_text(
color = rgb(51, 51, 51, maxColorValue = 255),
size = rel(0.75)),
axis.text = element_text(
color = rgb(51, 51, 51, maxColorValue = 255),
size = rel(0.5)),
panel.grid.major = element_line(
rgb(51, 51, 51, maxColorValue = 255),
linetype = "dotted"),
panel.grid.minor = element_line(
rgb(51, 51, 51, maxColorValue = 255),
linetype = "dotted",
size = rel(4))
)
}
theme_dis()
runApp('lol_stats/lol_app.R')
library(ggplot2)
theme_dis <- function (base_size=11, base_family="Georgia",
base_line_size = base_size/22,
base_rect_size = base_size/22) {
theme_bw() %+replace%
theme(
panel.background  = element_blank(),
plot.background = element_rect(fill="gray96", colour=NA),
legend.background = element_rect(fill="transparent", colour=NA),
legend.key        = element_rect(fill="transparent", colour=NA),
base_line_size = base_size / 150,
base_rect_size = base_size / 150,
plot.title = element_text(
color = rgb(251, 146, 28, maxColorValue = 255),
face = "bold",
hjust = 0),
axis.title = element_text(
color = rgb(51, 51, 51, maxColorValue = 255),
size = rel(0.75)),
axis.text = element_text(
color = rgb(51, 51, 51, maxColorValue = 255),
size = rel(0.5)),
panel.grid.major = element_line(
rgb(51, 51, 51, maxColorValue = 255),
linetype = "dotted"),
panel.grid.minor = element_line(
rgb(51, 51, 51, maxColorValue = 255),
linetype = "dotted",
size = rel(4))
)
}
theme_dis
theme_dis()
runApp('lol_stats/lol_app.R')
library(ggplot2)
theme_dis <- function () {
font <- Georgia
size <- 11
theme_bw() %+replace%
theme(
panel.background  = element_blank(),
plot.background = element_rect(fill="gray96", colour=NA),
legend.background = element_rect(fill="transparent", colour=NA),
legend.key        = element_rect(fill="transparent", colour=NA),
base_line_size = base_size / 150,
base_rect_size = base_size / 150,
plot.title = element_text(
color = rgb(251, 146, 28, maxColorValue = 255),
face = "bold",
hjust = 0),
axis.title = element_text(
color = rgb(51, 51, 51, maxColorValue = 255),
size = rel(0.75)),
axis.text = element_text(
color = rgb(51, 51, 51, maxColorValue = 255),
size = rel(0.5)),
panel.grid.major = element_line(
rgb(51, 51, 51, maxColorValue = 255),
linetype = "dotted"),
panel.grid.minor = element_line(
rgb(51, 51, 51, maxColorValue = 255),
linetype = "dotted",
size = rel(4))
)
}
theme_dis()
library(ggplot2)
theme_dis <- function () {
font <- "Georgia"
size <- 11
theme_bw() %+replace%
theme(
panel.background  = element_blank(),
plot.background = element_rect(fill="gray96", colour=NA),
legend.background = element_rect(fill="transparent", colour=NA),
legend.key        = element_rect(fill="transparent", colour=NA),
base_line_size = base_size / 150,
base_rect_size = base_size / 150,
plot.title = element_text(
color = rgb(251, 146, 28, maxColorValue = 255),
face = "bold",
hjust = 0),
axis.title = element_text(
color = rgb(51, 51, 51, maxColorValue = 255),
size = rel(0.75)),
axis.text = element_text(
color = rgb(51, 51, 51, maxColorValue = 255),
size = rel(0.5)),
panel.grid.major = element_line(
rgb(51, 51, 51, maxColorValue = 255),
linetype = "dotted"),
panel.grid.minor = element_line(
rgb(51, 51, 51, maxColorValue = 255),
linetype = "dotted",
size = rel(4))
)
}
theme_dis()
theme()
theme
library(ggplot2)
theme_dis <- function () {
theme_bw(base_size = 11, base_family = "Georgie") %+replace%
theme(
panel.background  = element_blank(),
plot.background = element_rect(fill="gray96", colour=NA),
legend.background = element_rect(fill="transparent", colour=NA),
legend.key        = element_rect(fill="transparent", colour=NA),
base_line_size = base_size / 150,
base_rect_size = base_size / 150,
plot.title = element_text(
color = rgb(251, 146, 28, maxColorValue = 255),
face = "bold",
hjust = 0),
axis.title = element_text(
color = rgb(51, 51, 51, maxColorValue = 255),
size = rel(0.75)),
axis.text = element_text(
color = rgb(51, 51, 51, maxColorValue = 255),
size = rel(0.5)),
panel.grid.major = element_line(
rgb(51, 51, 51, maxColorValue = 255),
linetype = "dotted"),
panel.grid.minor = element_line(
rgb(51, 51, 51, maxColorValue = 255),
linetype = "dotted",
size = rel(4))
)
}
theme_dis()
theme_bw(base_size = 11, base_family = "Georgie") %+replace%
theme(
panel.background  = element_blank(),
plot.background = element_rect(fill="gray96", colour=NA),
legend.background = element_rect(fill="transparent", colour=NA),
legend.key        = element_rect(fill="transparent", colour=NA),
base_line_size = 11 / 150,
base_rect_size = 11 / 150,
plot.title = element_text(
color = rgb(251, 146, 28, maxColorValue = 255),
face = "bold",
hjust = 0),
axis.title = element_text(
color = rgb(51, 51, 51, maxColorValue = 255),
size = rel(0.75)),
axis.text = element_text(
color = rgb(51, 51, 51, maxColorValue = 255),
size = rel(0.5)),
panel.grid.major = element_line(
rgb(51, 51, 51, maxColorValue = 255),
linetype = "dotted"),
panel.grid.minor = element_line(
rgb(51, 51, 51, maxColorValue = 255),
linetype = "dotted",
size = rel(4))
)
library(ggplot2)
theme_dis <- function () {
theme_bw(base_size = 11, base_family = "Georgie") %+replace%
theme(
panel.background  = element_blank(),
plot.background = element_rect(fill="gray96", colour=NA),
legend.background = element_rect(fill="transparent", colour=NA),
legend.key        = element_rect(fill="transparent", colour=NA),
base_line_size = 11 / 150,
base_rect_size = 11 / 150,
plot.title = element_text(
color = rgb(251, 146, 28, maxColorValue = 255),
face = "bold",
hjust = 0),
axis.title = element_text(
color = rgb(51, 51, 51, maxColorValue = 255),
size = rel(0.75)),
axis.text = element_text(
color = rgb(51, 51, 51, maxColorValue = 255),
size = rel(0.5)),
panel.grid.major = element_line(
rgb(51, 51, 51, maxColorValue = 255),
linetype = "dotted"),
panel.grid.minor = element_line(
rgb(51, 51, 51, maxColorValue = 255),
linetype = "dotted",
size = rel(4))
)
}
theme_dis()
runApp('lol_stats/lol_app.R')
runApp('lol_stats/lol_app.R')
theme_dis <- function () {
theme(
panel.background  = element_blank(),
plot.background = element_rect(fill="gray96", colour=NA),
legend.background = element_rect(fill="transparent", colour=NA),
legend.key        = element_rect(fill="transparent", colour=NA),
base_line_size = 11 / 150,
base_rect_size = 11 / 150,
plot.title = element_text(
color = rgb(251, 146, 28, maxColorValue = 255),
face = "bold",
hjust = 0),
axis.title = element_text(
color = rgb(51, 51, 51, maxColorValue = 255),
size = rel(0.75)),
axis.text = element_text(
color = rgb(51, 51, 51, maxColorValue = 255),
size = rel(0.5)),
panel.grid.major = element_line(
rgb(51, 51, 51, maxColorValue = 255),
linetype = "dotted"),
panel.grid.minor = element_line(
rgb(51, 51, 51, maxColorValue = 255),
linetype = "dotted",
size = rel(4))
)
}
runApp('lol_stats/lol_app.R')
library(ggplot2)
theme_dis <- theme_minimal(base_size = 11, base_family = "Georgia")+
theme(
panel.background  = element_blank(),
plot.background = element_rect(fill="gray96", colour=NA),
legend.background = element_rect(fill="transparent", colour=NA),
legend.key        = element_rect(fill="transparent", colour=NA),
base_line_size = 11 / 150,
base_rect_size = 11 / 150,
plot.title = element_text(
color = rgb(251, 146, 28, maxColorValue = 255),
face = "bold",
hjust = 0),
axis.title = element_text(
color = rgb(51, 51, 51, maxColorValue = 255),
size = rel(0.75)),
axis.text = element_text(
color = rgb(51, 51, 51, maxColorValue = 255),
size = rel(0.5)),
panel.grid.major = element_line(
rgb(51, 51, 51, maxColorValue = 255),
linetype = "dotted"),
panel.grid.minor = element_line(
rgb(51, 51, 51, maxColorValue = 255),
linetype = "dotted",
size = rel(4))
)
runApp('lol_stats/lol_app.R')
library(ggplot2)
theme_dis <- theme_minimal(base_size = 11, base_family = "Georgia")+
theme(
panel.background  = element_blank(),
plot.background = element_rect(fill="gray96", colour=NA),
legend.background = element_rect(fill="transparent", colour=NA),
legend.key        = element_rect(fill="transparent", colour=NA),
base_line_size = 11 / 150,
base_rect_size = 11 / 150,
plot.title = element_text(
color = rgb(251, 146, 28, maxColorValue = 255),
face = "bold",
hjust = 0),
axis.title = element_text(
color = rgb(51, 51, 51, maxColorValue = 255),
size = rel(0.75)),
axis.text = element_text(
color = rgb(51, 51, 51, maxColorValue = 255),
size = rel(0.5)),
panel.grid.major = element_line(
rgb(51, 51, 51, maxColorValue = 255),
linetype = "dotted"),
panel.grid.minor = element_line(
rgb(51, 51, 51, maxColorValue = 255),
linetype = "dotted",
size = rel(4))
)
theme_dis
theme_dis()
runApp('lol_stats/lol_app.R')
runApp('lol_stats/lol_app.R')
runApp('lol_stats/lol_app.R')
runApp('lol_stats/lol_app.R')
runApp('lol_stats/lol_app.R')
runApp('lol_stats/lol_app.R')
runApp('lol_stats/lol_app.R')
runApp('lol_stats/lol_app.R')
runApp('lol_stats/lol_app.R')
runApp('lol_stats/lol_app.R')
runApp('lol_stats/lol_app.R')
runApp('lol_stats/lol_app.R')
runApp('lol_stats/lol_app.R')
runApp('lol_stats/lol_app.R')
runApp('lol_stats/lol_app.R')
runApp('lol_stats/lol_app.R')
runApp('lol_stats/lol_app.R')
runApp('lol_stats/lol_app.R')
runApp('lol_stats/lol_app.R')
runApp('lol_stats/lol_app.R')
runApp('lol_stats/lol_app.R')
runApp('lol_stats/lol_app.R')
runApp('lol_stats/lol_app.R')
runApp('lol_stats/lol_app.R')
runApp('lol_stats/lol_app.R')
runApp('lol_stats/lol_app.R')
runApp('lol_stats/lol_app.R')
runApp('lol_stats/lol_app.R')
runApp('lol_stats/lol_app.R')
runApp('lol_stats/lol_app.R')
runApp('lol_stats/lol_app.R')
runApp('lol_stats/lol_app.R')
runApp('lol_stats/lol_app.R')
runApp('lol_stats/lol_app.R')
lol_data
save(lol_data, file = "data/shiny/shinyappdata.R")
runApp('lol_stats/lol_app.R')
runApp('lol_stats/lol_app.R')
install.packages("rsconnect")
rsconnect::setAccountInfo(name='datainstate',
token='CFA07FE2FBF0016586739F6CC67FAE81',
secret='droYEfk5PhPxrITWVoebn9YCwD401KB9innzVc6p')
library(rsconnect)
rsconnect::deployApp('C:/Users/ejhar/Google Drive/Projects/lol_project/lol_stats/lol_app.R')
library(rsconnect)
rsconnect::deployApp('C:/Users/ejhar/Google Drive/Projects/lol_project/lol_stats')
library(rsconnect)
rsconnect::deployApp('C:/Users/ejhar/Google Drive/Projects/lol_project/lol_stats')
library(rsconnect)
rsconnect::deployApp('C:/Users/ejhar/Google Drive/Projects/lol_project/lol_stats')
library(shiny); runApp('lol_stats/lol_app.R')
runApp('lol_stats/lol_app.R')
library(rsconnect)
rsconnect::deployApp('C:/Users/ejhar/Google Drive/Projects/lol_project/lol_stats')
runApp('lol_stats/lol_app.R')
library(rsconnect)
rsconnect::deployApp('C:/Users/ejhar/Google Drive/Projects/lol_project/lol_stats')
setwd(('C:/Users/ejhar/Google Drive/Projects/lol_project/lol_stats'))
shiny::runApp()
library(rsconnect)
rsconnect::deployApp('C:/Users/ejhar/Google Drive/Projects/lol_project/lol_stats')
library(rsconnect)
rsconnect::deployApp('C:/Users/ejhar/Google Drive/Projects/lol_project/lol_stats')
library(rsconnect)
rsconnect::deployApp('C:/Users/ejhar/Google Drive/Projects/lol_project/lol_stats')
library(rsconnect)
rsconnect::deployApp('C:/Users/ejhar/Google Drive/Projects/lol_project/lol_stats')
library(rsconnect)
rsconnect::deployApp('C:/Users/ejhar/Google Drive/Projects/lol_project/lol_stats')
beepr::beep("fanfare")
library(rsconnect)
rsconnect::deployApp('C:/Users/ejhar/Google Drive/Projects/lol_project/lol_stats')
beepr::beep("fanfare")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(rsconnect)
rsconnect::deployApp('C:/Users/ejhar/Google Drive/Projects/lol_project/lol_stats')
beepr::beep("fanfare")
